resource_types:
  - name: teams-notification
    type: docker-image
    source:
      repository: navicore/teams-notification-resource
      tag: latest

resources:
  - name: {{git-repo-name}}
    type: git
    check_every: 10s
    source:
      uri: {{git-repo-uri}}
      branch: {{git-repo-branch}}
      private_key: {{git-key}}

  - name: github-release
    type: github-release
    source:
      owner: {{git-release-org}}
      repository: {{git-release-repo}}
      access_token: {{git-access-token}}

  - name: test-env
    type: cf
    source:
      api: {{cf-url}}
      username: {{cf-username}}
      password: {{cf-password}}
      organization: {{cf-organization}}
      space: {{cf-dev-space}}

  - name: preprod-env
    type: cf
    source:
      api: {{cf-url}}
      username: {{cf-username}}
      password: {{cf-password}}
      organization: {{cf-organization}}
      space: {{cf-dev-space}}

  - name: version
    type: semver
    source:
      driver: git
      uri: {{version-repo-uri}}
      branch: {{version-repo-branch}}
      file: {{version-file}}
      private_key: {{git-key}}

  - name: notification
    type: teams-notification
    source:
      url: {{teams-url}}

jobs:
  - name: increment-version
    plan:
      - get: {{git-repo-name}}
        trigger: true
      - get: version
        params: {bump: patch}
      - put: version
        params: {file: version/version}

  - name: build-and-unittest
    plan:
      - get: version
        trigger: true
        passed: [increment-version]
      - get: {{git-repo-name}}
      - task: Build Project
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: maven
              tag: latest
          inputs:
            - name: {{git-repo-name}}
            - name: version
          outputs:
            - name: output
          run:
            path: ((git-repo-name))/concourse/tasks/package/package.sh
            args:
              - ((git-repo-name))
              - output
              - ((git-repo-name))/concourse/assets
              - ((project-name))
        params:
          version: version/version
        on_failure:
          put: notification
          params:
            color: EA4300
            text: Error occurred while building and running tests.
            title: BOOOOOOOOM! $BUILD_PIPELINE_NAME $BUILD_JOB_NAME "#"$BUILD_NAME
            actionName: Go to FAILURE
            actionTarget: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
      - put: github-release
        params:
          name: version/version
          tag: version/version
          globs:
            - output/((project-name)).jar
            - output/manifest.yml
            - output/manifest_prod.yml

  - name: deploy-test
    plan:
      - get: github-release
        trigger: true
        passed: [build-and-unittest]
      - put: test-env
        params:
          manifest: github-release/manifest.yml
          environment_variables:
            AWS_ACCESS_KEY_ID: {{aws-access-key}}
            AWS_SECRET_ACCESS_KEY: {{aws-secret-key}}
        on_success:
          put: notification
          params:
            text: Deployed successfully on test.
            title: yay! $BUILD_PIPELINE_NAME $BUILD_JOB_NAME "#"$BUILD_NAME successful
            actionName: Go to build
            actionTarget: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
        on_failure:
          put: notification
          params:
            color: EA4300
            text: Error occurred while deploying $BUILD_PIPELINE_NAME to PCF on Test Environment.
            title: BOOOOOOOOM! $BUILD_PIPELINE_NAME $BUILD_JOB_NAME "#"$BUILD_NAME
            actionName: Go to FAILURE
            actionTarget: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME

  - name: deploy-preprod
    plan:
      - get: github-release
        trigger: true
        passed: [build-and-unittest, deploy-test]
      - put: preprod-env
        params:
          manifest: github-release/manifest_prod.yml
          environment_variables:
            AWS_ACCESS_KEY_ID: {{aws-access-key}}
            AWS_SECRET_ACCESS_KEY: {{aws-secret-key}}
        on_success:
          put: notification
          params:
            text: Deployed successfully on Pre-Production.
            title: yay! $BUILD_PIPELINE_NAME $BUILD_JOB_NAME "#"$BUILD_NAME successful
            actionName: Go to build
            actionTarget: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
        on_failure:
          put: notification
          params:
            color: EA4300
            text: Error occurred while deploying $BUILD_PIPELINE_NAME to PCF on Pre-Production Environment.
            title: BOOOOOOOOM! $BUILD_PIPELINE_NAME $BUILD_JOB_NAME "#"$BUILD_NAME
            actionName: Go to FAILURE
            actionTarget: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
